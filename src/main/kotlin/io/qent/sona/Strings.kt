package io.qent.sona

import java.util.ResourceBundle

object Strings {
    private val bundle: ResourceBundle
        get() = ResourceBundle.getBundle("messages.Strings")

    val history: String get() = bundle.getString("history")
    val messages: String get() = bundle.getString("messages")
    val modelsPresets: String get() = bundle.getString("modelsPresets")
    val startWorkingWithAi: String get() = bundle.getString("startWorkingWithAi")
    val toGetStarted: String get() = bundle.getString("toGetStarted")
    val save: String get() = bundle.getString("save")
    val name: String get() = bundle.getString("name")
    val provider: String get() = bundle.getString("provider")
    val model: String get() = bundle.getString("model")
    val apiUrl: String get() = bundle.getString("apiUrl")
    val token: String get() = bundle.getString("token")
    val agentRoles: String get() = bundle.getString("agentRoles")
    val context: String get() = bundle.getString("context")
    val totalTokenUsage: String get() = bundle.getString("totalTokenUsage")
    val output: String get() = bundle.getString("output")
    val input: String get() = bundle.getString("input")
    val cacheCreated: String get() = bundle.getString("cacheCreated")
    val cacheRead: String get() = bundle.getString("cacheRead")
    val totalCost: String get() = bundle.getString("totalCost")
    val lastRequest: String get() = bundle.getString("lastRequest")
    val requestCost: String get() = bundle.getString("requestCost")
    val showToolRequests: String get() = bundle.getString("showToolRequests")
    val copyMessage: String get() = bundle.getString("copyMessage")
    val deleteMessage: String get() = bundle.getString("deleteMessage")
    val ok: String get() = bundle.getString("ok")
    val alwaysInThisChat: String get() = bundle.getString("alwaysInThisChat")
    val cancel: String get() = bundle.getString("cancel")
    val addPreset: String get() = bundle.getString("addPreset")
    val deletePresetQuestion: String get() = bundle.getString("deletePresetQuestion")
    val copyCode: String get() = bundle.getString("copyCode")
    val applyPatch: String get() = bundle.getString("applyPatch")
    val applyPatchFailed: String get() = bundle.getString("applyPatchFailed")
    val invalidPatch: String get() = bundle.getString("invalidPatch")
    val patchDialogOpened: String get() = bundle.getString("patchDialogOpened")
    val typeMessage: String get() = bundle.getString("typeMessage")
    val architectPlaceholder: String get() = bundle.getString("architectPlaceholder")
    val codePlaceholder: String get() = bundle.getString("codePlaceholder")
    val defaultPlaceholder: String get() = bundle.getString("defaultPlaceholder")
    val mcpServers: String get() = bundle.getString("mcpServers")
    val installJetBrainsMcpServerPlugin: String get() = bundle.getString("installJetBrainsMcpServerPlugin")
    val editConfiguration: String get() = bundle.getString("editConfiguration")
    val pluginSettings: String get() = bundle.getString("pluginSettings")
    val ignoreHttpsErrors: String get() = bundle.getString("ignoreHttpsErrors")
    val anthropicSettings: String get() = bundle.getString("anthropicSettings")
    val cacheSystemPrompts: String get() = bundle.getString("cacheSystemPrompts")
    val cacheToolDescriptions: String get() = bundle.getString("cacheToolDescriptions")
    val apiRetries: String get() = bundle.getString("apiRetries")
    val openSonaAction: String get() = bundle.getString("openSonaAction")
    val openSonaActionDescription: String get() = bundle.getString("openSonaActionDescription")
    val createAction: String get() = bundle.getString("createAction")
    val createActionDescription: String get() = bundle.getString("createActionDescription")
    val historyAction: String get() = bundle.getString("historyAction")
    val historyActionDescription: String get() = bundle.getString("historyActionDescription")
    val rolesAction: String get() = bundle.getString("rolesAction")
    val rolesActionDescription: String get() = bundle.getString("rolesActionDescription")
    val presetsAction: String get() = bundle.getString("presetsAction")
    val presetsActionDescription: String get() = bundle.getString("presetsActionDescription")
    val serversAction: String get() = bundle.getString("serversAction")
    val serversActionDescription: String get() = bundle.getString("serversActionDescription")
    val addRole: String get() = bundle.getString("addRole")
    val deleteRoleQuestion: String get() = bundle.getString("deleteRoleQuestion")
    val deleteChatQuestion: String get() = bundle.getString("deleteChatQuestion")
    val shortDescription: String get() = bundle.getString("shortDescription")
}

