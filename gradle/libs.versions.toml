[versions]
junit = "4.13.2"
opentest4j = "1.3.0"
changelog = "2.2.1"
intelliJPlatform = "2.7.0"
kotlin = "2.1.20"
kover = "0.9.1"
qodana = "2024.3.4"
langchain4j_core = "1.0.0"
langchain4j_kotlin = "1.0.0-beta5"
langchain4j_anthropic = "1.0.0-beta5"
langchain4j_openai = "1.2.0"
langchain4j_google_ai_gemini = "1.2.0"
gson = "2.13.1"
langchain4j_mcp = "1.0.0-beta5"

[libraries]
junit = { group = "junit", name = "junit", version.ref = "junit" }
opentest4j = { group = "org.opentest4j", name = "opentest4j", version.ref = "opentest4j" }

langchain4j-core = { group = "dev.langchain4j", name = "langchain4j-core", version.ref = "langchain4j_core" }
langchain4j-kotlin = { group = "dev.langchain4j", name = "langchain4j-kotlin", version.ref = "langchain4j_kotlin" }
langchain4j-anthropic = { group = "dev.langchain4j", name = "langchain4j-anthropic", version.ref = "langchain4j_anthropic" }
langchain4j-openai = { group = "dev.langchain4j", name = "langchain4j-open-ai", version.ref = "langchain4j_openai" }
langchain4j-google-ai-gemini = { group = "dev.langchain4j", name = "langchain4j-google-ai-gemini", version.ref = "langchain4j_google_ai_gemini" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
langchain4j-mcp = { group = "dev.langchain4j", name = "langchain4j-mcp", version.ref = "langchain4j_mcp" }
[plugins]
changelog = { id = "org.jetbrains.changelog", version.ref = "changelog" }
intelliJPlatform = { id = "org.jetbrains.intellij.platform", version.ref = "intelliJPlatform" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
qodana = { id = "org.jetbrains.qodana", version.ref = "qodana" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
